<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!--
		The controllers are autodetected POJOs labeled with the @Controller annotation.
	-->
	<context:annotation-config/>
	<context:component-scan base-package="com.exalead.cv360.searchui" use-default-filters="true"/>

	<!-- CSRF protection -->
	<mvc:interceptors>
		<bean class="com.exalead.cv360.searchui.mvc.controller.csrf.CSRFHandlerInterceptor" />
	</mvc:interceptors>

	<!--
		Show custom view on exception throw
	-->
	<bean class="com.exalead.cv360.searchui.handler.MappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- key: Exception, value: viewName -->
				<prop key="com.exalead.access.definition.AccessException">AccessException</prop>
				<prop key="com.exalead.cv360.exceptions.ConnectionRefused">ConnectionRefused</prop>
				<prop key="com.exalead.cv360.searchui.view.widgets.controller.fetch.PreviewNotAvailable">PreviewNotAvailable</prop>
				<prop key="com.exalead.cv360.searchui.view.widgets.controller.fetch.RawNotAvailable">RawNotAvailable</prop>
				<prop key=".lang.Exception">Exception</prop>
			</props>
		</property>
		<property name="defaultStatusCode" value="500" />
		<property name="statusCodes">
			<props>
				<!-- key: viewName, value: statusCode -->
				<prop key="404">404</prop>
				<prop key="PreviewNotAvailable">503</prop>
				<prop key="RawNotAvailable">503</prop>
			</props>
		</property>
	</bean>
	
	<bean id="viewResolver" class="com.exalead.cv360.searchui.handler.MashupViewResolver" p:viewClass="org.springframework.web.servlet.view.tiles3.TilesView" />
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" p:definitions="/WEB-INF/tiles-defs.xml"/>
</beans>
