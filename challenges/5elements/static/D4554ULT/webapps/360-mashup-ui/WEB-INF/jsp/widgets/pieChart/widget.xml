<?xml version="1.0" encoding='UTF-8'?>
<Widget name="Pie Chart" group="Visualizations/Charts" premium="true">

	<Description>A pie chart is a circular chart divided into sectors, illustrating proportions.</Description>

	<Preview>
		<![CDATA[
			<img src="/resources/highcharts/images/preview_piechart.png" alt="Pie Chart" />
		]]>
	</Preview>

	<Platforms>
		<Platform type="web" supported="true" />
		<Platform type="mobile" supported="true" />
	</Platforms>

	<Includes>
		<Include type="css" path="/resources/highcharts/css/style.css" />
		<Include type="js" path="/resources/highcharts/js/highcharts.src.js" />
		<Include type="js" path="/resources/highcharts/js/highcharts.js" />
		<Include type="js" path="/resources/highcharts/js/pieChart.js" />
	</Includes>

	<SupportWidgetsId arity="ZERO" />
	<SupportFeedsId arity="MANY" />
	<SupportI18N supported="true">
		<JsKeys>
			<JsKey>charts.nodata</JsKey>
		</JsKeys>
	</SupportI18N>

	<DefaultValues>
		<DefaultValue name="sortMode">default</DefaultValue>
		<DefaultValue name="basedOn">count</DefaultValue>
		<DefaultValue name="categoryName">${category.description} (${number:format(category.count)})</DefaultValue>
		<DefaultValue name="nbSubFacets">5</DefaultValue>
		<DefaultValue name="showOthers">true</DefaultValue>
		<DefaultValue name="height">270</DefaultValue>
		<DefaultValue name="dataProcessor"><![CDATA[
function(data) {
	return data;
}
]]></DefaultValue>
	</DefaultValues>

	<OptionsGroup name="General">
		<Option id="title" name="Widget title" arity="ZERO_OR_ONE" isEvaluated="true">
			<Description>Widget title. If blank, no title is displayed.</Description>
		</Option>
		<Option id="facetsList" name="Facet" arity="ONE">
			<Description>Specifies the facet that will be used by the chart on the X axis.</Description>		
			<Functions>
				<ContextMenu>NormalFacets()</ContextMenu>
				<ContextMenu>Hierarchical2DFacets()</ContextMenu>
				<ContextMenu>COMMON_emptyOnChange()</ContextMenu>
			</Functions>
		</Option>
		<OptionComposite id="basedOn" name="Angle" arity="ONE" glue="##">
			<Option id="aggregations" name="Aggregation">
				<Description>Specifies the type of aggregations that will be used by the chart.</Description>
				<Functions>
					<ContextMenu>Aggregations('facetsList')</ContextMenu>
					<ContextMenu>COMMON_emptyOnChange()</ContextMenu>
					<Check>isEmpty</Check>
				</Functions>
			</Option>
		</OptionComposite>
		<Option id="categoryName" name="Legend" isEvaluated="true" arity="ONE">
			<Description>Specifies the chart legend.</Description>
			<Functions>
				<ContextMenu>WIDGET_EvalCategory()</ContextMenu>
			</Functions>
		</Option>
	</OptionsGroup>

	<OptionsGroup name="Advanced">
		<Option id="sortMode" name="Sort categories by" arity="ONE">
			<Description>
				<![CDATA[
					Sorts the categories using the selected method. Selecting anything but 'default' impacts performance.<br />
					<ul>
						<li>'default' requires no processing.</li>
						<li>'desc*', 'score*', 'count*', 'value*' and 'range*' impact performance on the server side.</li>
					</ul>
				]]>
			</Description>
			<Values>
				<Value>default</Value>
				<Value>description-asc</Value>
				<Value>description-desc</Value>
				<Value>description-num-asc</Value>
				<Value>description-num-desc</Value>
				<Value>description-range-asc</Value>
				<Value>description-range-desc</Value>
				<Value>value-asc</Value>
				<Value>value-desc</Value>
			</Values>
		</Option>
		<Option id="nbSubFacets" name="Max number of categories">
			<Description>Specifies the maximum number of categories to display. You must enter an integer.</Description>
			<Functions>
				<Check>isInteger</Check>
			</Functions>
		</Option>
		<Option id="showOthers" name="Show 'Others' group">
			<Description>Display or not the 'Others' category group.</Description>
			<Values>
				<Value>false</Value>
				<Value>true</Value>
			</Values>
		</Option>
		<Option id="facetPageName" name="Destination page on click" isUrlEncoded="true" isEvaluated="true">
			<Description>Indicates the URL that must be accessed for a refinement option. If blank, you stay on the same page.</Description>
			<Functions>
				<ContextMenu>Pages()</ContextMenu>
			</Functions>
		</Option>
		<Option id="forceRefineOnFeeds" name="Force refinement for feeds" arity="ZERO_OR_MANY">
			<Description>Forces refinements on the specified feeds.</Description>
			<Functions>
				<ContextMenu>Feeds()</ContextMenu>
				<ContextMenu>COMMON_emptyOnChange()</ContextMenu>
			</Functions>
		</Option>
	</OptionsGroup>

	<OptionsGroup name="JavaScript">
		<Option id="opts" name="JavaScript options" arity="ONE" isEvaluated="true">
			<Description>Lets you customize some javascript options used by the Highcharts library. Your javascript options will overwrite the default ones. For example, it can be useful to customize the colors of your pie chart slices or to redirect clicks on pages. </Description>		
			<Functions>
				<Display>SetType('code', 'js')</Display>
			</Functions>
			<Values>
				<Value><![CDATA[
{
	/*colors: ['#4572A7', '#AA4643', '#89A54E', '#80699B', '#3D96AE', '#DB843D', '#92A8CD', '#A47D7C', '#B5CA92'],*/
	/*colors: ['#058DC7', '#50B432', '#ED561B', '#DDDF00', '#24CBE5'],*/
	chart: {
		defaultSeriesType: 'pie'
	},
	title: {
		text: null
	},
	credits: {
		enabled: false
	},
	legend: {
		margin: 20,
		borderWidth: 0,
		layout: 'horizontal',
		itemWidth: 150
	},
	tooltip: {
		formatter: function() {
			var percentage = (this.percentage ? ' (' + (Math.round(this.percentage * 100) / 100).toFixed(2) + '%)' : '');
			return '<b>'+ this.point.name +'</b><br/>' + this.y + percentage;
		}
	},
	plotOptions: {
		series: {
			stickyTracking: false,
			shadow: false,
            turboThreshold: 0,
			events: {
				click: function(e) {
                    if (e.point.r) {
                        exa.redirect(buildUrl(this.options.baseUrl, e.point.r));
                    }
				}
			}
		},
		pie: {
			cursor: 'pointer',
			showInLegend: true,
			dataLabels: {
				enabled: false
				/*
				enabled: true,
				formatter: function() {
					if (this.percentage > 8) { return this.point.name; }
					else { return '' };
				},
				color: 'white'
				*/
			},
			point: {
				events: {
					legendItemClick: function(e) {
						/*
						if (e.target.url != null) {
							exa.redirect(e.target.url);
							return false;
						}
						*/

						if (this.visible) {
							this['y_old'] = this.y;
							this.update(0);
						} else {
							this.update( this.y_old );
						}
					}
				}
			}
		}
	}
}]]></Value>
			</Values>
		</Option>
	</OptionsGroup>

	<OptionsGroup name="Data processor">
		<Description>The Data Processor allows you to manipulate the json before its execution. Be careful, some properties of the data object may be overridden by the ones set in the Javascript tab.</Description>
		<Option id="dataProcessor" name="Javascript function">
			<Description>Lets you define the Javascript function that will be executed on data  before the Highcharts processing. </Description>			
			<Functions>
				<Display>SetType('code', 'js')</Display>
			</Functions>
		</Option>
	</OptionsGroup>

	<OptionsGroup name="Style">
		<Option id="width" name="Width">
			<Description>Specifies the width of the widget (pixels). You must enter an integer.</Description>
			<Functions>
				<Check>isInteger</Check>
			</Functions>
		</Option>
		<Option id="height" name="Height" arity="ONE">
			<Description>Specifies the height of the widget (pixels). You must enter an integer.</Description>
			<Functions>
				<Check>isInteger</Check>
			</Functions>
		</Option>
	</OptionsGroup>
</Widget>
